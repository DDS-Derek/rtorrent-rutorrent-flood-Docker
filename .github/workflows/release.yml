name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - version.json

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v5
      
      - 
        name: Set Version
        id: set-version
        run: |
          VERSION=$(jq -r '.version' version.json)
          echo "VERSION=${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          sed -i "1s|\"edge\"|\"${VERSION}\",&|" matrix.txt

      -
        uses: stefanzweifel/git-auto-commit-action@01d77ca6cb089da1360e540865f7d035c95aa199
        with:
          commit_message: "chore(bump): update version to ${{ steps.set-version.outputs.VERSION }}"
          branch: master
          file_pattern: 'matrix.txt'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.set-version.outputs.VERSION }}
          name: ${{ steps.set-version.outputs.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/rtorrent-rutorrent-flood
          tags: |
            type=raw,value=${{ steps.set-version.outputs.VERSION }}
            type=raw,value=latest

      - 
        name: Set Up QEMU
        uses: docker/setup-qemu-action@v3

      - 
        name: Set Up Buildx
        uses: docker/setup-buildx-action@v3
        
      - 
        name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - 
        name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: |
            linux/amd64
            linux/arm64/v8
          build-args: |
            RT_RU_VERSION=${{ steps.meta.outputs.version }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      -
        name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USERNAME }}/rtorrent-rutorrent-flood
          readme-filepath: ./README.md